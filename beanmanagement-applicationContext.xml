<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	 xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


<beans:bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:location="classpath:properties/db.properties"/>

<!-- 
     <beans:bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="5" />
		<property name="maxActive" value="0" />
		<property name ="timeBetweenEvictionRunsMillis" value="5000" />
		<property name ="minEvictableIdleTimeMillis" value="55000" />
		<property name ="testOnBorrow" value="true" />
		<property name ="removeAbandoned" value="true" />
		<property name ="removeAbandonedTimeout" value="55" />
		<property name ="maxIdle" value="10" />
		<property name ="minIdle" value="5" />
	
		
</>  -->

    <beans:bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource"
          p:driverClassName="${jdbc.driverClassName}"
          p:url="${jdbc.url}"
          p:username="${jdbc.username}"
          p:password="${jdbc.password}"/>
  
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<beans:bean id="multipartResolver"  
  class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />  
	 

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		
	</beans:bean>
	
	<context:component-scan base-package="com.mlab.endpoint" />
	
	<beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
     <beans:constructor-arg>
         <beans:ref bean="dataSource"/>
     </beans:constructor-arg>    
   </beans:bean>
   
   <beans:bean id="storedProcJdbcDao" class="com.mlab.endpoint.dao.StoredProcJdbcDaoImpl">
 		 <beans:property name="jdbcTemplate" ref="jdbcTemplate"></beans:property>
 	</beans:bean>
 	
 	 <beans:bean id="caseRegistrationImp" class="com.mlab.endpoint.Service.ProductRegistrationImp">
 		<beans:property name="storedProcJdbcDao" ref="storedProcJdbcDao"></beans:property>
 	</beans:bean>
	 
   <beans:bean id="newCustomisedProfileService" class="com.mlab.endpoint.Service.TestServiceImp">
 		<beans:property name="storedProcJdbcDao" ref="storedProcJdbcDao"></beans:property>
 	</beans:bean>
 	
 	 <beans:bean id="caseInformationViewImpl" class="com.mlab.endpoint.Service.ProductInformationViewImpl">
 		<beans:property name="storedProcJdbcDao" ref="storedProcJdbcDao"></beans:property>
 	</beans:bean>
 	
 	
 	 <beans:bean id="customerInformationViewImpl"
 	 	class="com.mlab.endpoint.Service.CustomerInformationImpl">
 		<beans:property name="storedProcJdbcDao" ref="storedProcJdbcDao"></beans:property>
 	</beans:bean>


 	 <beans:bean id="reportImp" class="com.mlab.endpoint.Service.ReportImp">
 		<beans:property name="storedProcJdbcDao" ref="storedProcJdbcDao"></beans:property>
 	</beans:bean>
 	
 	 <beans:bean id="searchResultImp" class="com.mlab.endpoint.Service.SearchResultImp">
 		<beans:property name="storedProcJdbcDao" ref="storedProcJdbcDao"></beans:property>
 	</beans:bean>
    <beans:bean id="dropDownMenuDataImp" class="com.mlab.endpoint.Service.DropDownMenuDataImp">
 		<beans:property name="storedProcJdbcDao" ref="storedProcJdbcDao"></beans:property>
 	</beans:bean>
 	 <beans:bean id="systemSettingsImp" class="com.mlab.endpoint.Service.SystemSettingsImp">
 		<beans:property name="storedProcJdbcDao" ref="storedProcJdbcDao"></beans:property>
 	</beans:bean>
	
	<!--  START: Added for i18n-->
	<beans:bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<beans:property name="defaultLocale" value="en_US" />
	</beans:bean>
	<beans:bean id="localeChangeInterceptor"
		class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
		<beans:property name="paramName" value="language" />
	</beans:bean>
	
	<beans:bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping" >
		<beans:property name="interceptors">
			<beans:list>
				<beans:ref bean="localeChangeInterceptor" />
			</beans:list>
		</beans:property>
	</beans:bean>
	<!-- Register the labels.properties -->
	<beans:bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basenames" value="labels,messages" />
	</beans:bean>
	<!--  END -->
	
	
	
</beans:beans>
