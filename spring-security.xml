<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context" 
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.2.xsd">


        
    
        
    <context:annotation-config/>

    <!-- enable use-expressions -->
    <http auto-config="true" use-expressions="true" access-decision-manager-ref="">
        <headers>
            <cache-control />
        </headers>

        <intercept-url pattern="/login/user-login" access="permitAll"/>
       <!--  <intercept-url pattern="/**" access="hasAnyRole('ROLE_USER')"/> -->
       <intercept-url pattern="/dashbord*" access="hasAnyRole('ROLE_DASHBOARD'  ,'ROLE_ADMIN')"/>
        <intercept-url pattern="/dashbord/**" access="hasAnyRole('ROLE_DASHBOARD'  ,'ROLE_ADMIN')"/>
        <intercept-url pattern="/download**" access="hasAnyRole('ROLE_DASHBOARD'  ,'ROLE_ADMIN')"/>
        <intercept-url pattern="/download/**" access="hasAnyRole('ROLE_DASHBOARD'  ,'ROLE_ADMIN')"/>
        <intercept-url pattern="/report*" access="hasAnyRole('ROLE_DASHBOARD'  ,'ROLE_ADMIN')"/>
        <intercept-url pattern="/report/**" access="hasAnyRole('ROLE_DASHBOARD'  ,'ROLE_ADMIN')"/>
        <intercept-url pattern="/case*" access="hasAnyRole('ROLE_USER' ,'ROLE_DASHBOARD' , 'ROLE_ADMIN')"/>
        <intercept-url pattern="/case/**" access="hasAnyRole('ROLE_USER' ,'ROLE_DASHBOARD' , 'ROLE_ADMIN')"/>
        <intercept-url pattern="/usermanagement**" access="hasAnyRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/usermanagement/**" access="hasAnyRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/systemSettings**" access="hasAnyRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/systemSettings/**" access="hasAnyRole('ROLE_ADMIN')"/>        

<!-- 
        <intercept-url pattern="/dashbord*" access="hasAnyRole('ROLE_DASHBOARD'  ,'ROLE_ADMIN')"/>
        <intercept-url pattern="/dashbord/**" access="hasAnyRole('ROLE_DASHBOARD'  ,'ROLE_ADMIN')"/>
        <intercept-url pattern="/download**" access="hasAnyRole('ROLE_DASHBOARD'  ,'ROLE_ADMIN')"/>
        <intercept-url pattern="/download/**" access="hasAnyRole('ROLE_DASHBOARD'  ,'ROLE_ADMIN')"/>
        <intercept-url pattern="/report*" access="hasAnyRole('ROLE_DASHBOARD'  ,'ROLE_ADMIN')"/>
        <intercept-url pattern="/report/**" access="hasAnyRole('ROLE_DASHBOARD'  ,'ROLE_ADMIN')"/>
        <intercept-url pattern="/case*" access="hasAnyRole('ROLE_USER' ,'ROLE_DASHBOARD' , 'ROLE_ADMIN')"/>
        <intercept-url pattern="/case/**" access="hasAnyRole('ROLE_USER' ,'ROLE_DASHBOARD' , 'ROLE_ADMIN')"/>
        <intercept-url pattern="/usermanagement**" access="hasAnyRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/usermanagement/**" access="hasAnyRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/systemSettings**" access="hasAnyRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/systemSettings/**" access="hasAnyRole('ROLE_ADMIN')"/> -->
       
       
        <!-- access denied page -->
        <access-denied-handler error-page="/403"/>

        <form-login
            login-processing-url="/login/processing"
            login-page="/login/user-login"
            default-target-url="/"
            authentication-failure-url="/login/user-login"
            username-parameter="username"
            password-parameter="password"
            authentication-success-handler-ref="successHandler"
            
        />
        
        <logout logout-success-url="/login/user-login?logout"  delete-cookies="JSESSIONID"/>
        
    </http>
    <beans:bean id="successHandler" class="com.mlab.endpoint.security.SuccessHandler"/>
    
    <beans:bean id="userService" class="com.mlab.endpoint.Service.UserService">
        <beans:property name="storedProcJdbcDao" ref="storedProcJdbcDao"/>
    </beans:bean>
    
    <beans:bean id="customAuthenticationProvider" class="com.mlab.endpoint.security.CustomAuthenticationProvider">
        <beans:property name="userService" ref="userService"/>
    </beans:bean>
    
    <authentication-manager>
        <authentication-provider ref="customAuthenticationProvider" />
    </authentication-manager>
</beans:beans>